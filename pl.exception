/*
 * Copyright (C) 2025, S-Patriarch
 * Patriarch library : pl::Exception
 *
 * usage:
 *   В коде программы бросается исключение следующим образом:
 *     throw pl::Exception("E: Message to exception.");
 *
 *   Ловится данное исключение следующим образом:
 *     try {
 *       throw pl::Exception("E: Message to exception.");
 *     }
 *     catch (std::exception &ex) {
 *       std::cout
 *         << "\nПоймано исключение: "
 *         << ex.what()
 *         << std::endl;
 *     }
 */

#ifndef PL_EXCEPTION
#define PL_EXCEPTION 1

#include <exception>

namespace pl {

    class Exception final : public std::exception {
        const char *m_message;

    public:
        Exception(const char *mess) : std::exception(), m_message{mess} {}
        ~Exception() noexcept {}

        virtual const char *what() const noexcept override
            // перегрузка метода what() стандартного класса std::exception
        {return m_message;}
    };

}

#endif
