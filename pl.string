/*
 * Copyright (C) 2025, S-Patriarch
 * Patriarch library : pl::String
 *
 * strspl() - разделение строки на слова
 * strrev() - переворот строки
 * extract_digits() - последовательное извлечение цифр из строки
 * count_char() - подсчет количества вхождений символа в строку
 * count_words() - подсчет количества слов в строке
 */

#ifndef PL_STRING
#define PL_STRING 1

#include <string>
#include <vector>
#include <sstream>
#include <cctype>
#include <algorithm>

namespace pl {

    using std::string;
    using std::vector;
    using std::stringstream;

    class String {
    public:
        auto strspl(const string &) -> vector<string>;
        auto strrev(string &) -> void;
        auto extract_digits(const string &) -> vector<unsigned short int>;
        auto count_char(const string &, char) -> int;
        auto count_words(const string &) -> int;
    };

    auto String::strspl(const string &s) -> vector<string>
        // функция разделяет строку на слова
    {
        stringstream ss(s);
        vector<string> res;
        string w {};
        while (ss >> w) {res.emplace_back(w);}
        return res;
    }

    auto String::strrev(string &s) -> void
        // функция переворачивает строку
        // при этом строка s меняется прямо внутри
        // функции без возврата нового значения
    {std::reverse(s.begin(),s.end());}

    auto String::extract_digits(const string &s) -> vector<unsigned short int>
        // функция последовательно извлекает цифры из строки
    {
        vector<unsigned short int> res {};
        for (char c : s) {
            if (std::isdigit(static_cast<unsigned char>(c))) {
                // преобразуем символ цифры в числовое значение
                res.emplace_back(c-'0');
            }
        }
        res.shrink_to_fit();
        return res;
    }

    auto String::count_char(const string &s, char c) -> int
        // функция подсчитывает количество вхождений
        // символа в строку
    {
        int count {0};
        for (char ch : s) {
            if (ch==c) {++count;}
        }
        return count;
    }

    auto String::count_words(const string &s) -> int
        // функция подсчитывает количество слов в строке
    {
        stringstream ss(s);
        string w {};
        int count {0};
        while (ss >> w) {++count;}
        return count;
    }

}

#endif
